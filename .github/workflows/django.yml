name: Django CI


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{secrets.DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: mytestdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL to be ready
      run: |
        until pg_isready -h localhost -p 5432; do
          echo "Waiting for PostgreSQL..."
          sleep 5
        done
    - name: Set environment variables for Africa's Talking
      env:
        SMS_USERNAME: ${{ secrets.SMS_USERNAME  }}
        SMS_APIKEY: ${{ secrets.SMS_APIKEY }}
  
    - name: Create Test Database
      env:
        PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      run: |
        psql -h localhost -U ${{ secrets.DB_USER }} -d postgres -p 5432 -c "CREATE DATABASE ${{ secrets.DB_NAME }};"

    - name: Set environment variables
      run: |
        echo "DATABASE_URL=postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}" >> $GITHUB_ENV

    - name: Apply Migrations
      env:
        DATABASE_URL: postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ secrets.DB_NAME }}
      run: |
        python manage.py migrate

    - name: Run Tests
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        python manage.py test
